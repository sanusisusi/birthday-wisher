{"version":3,"sources":["Wish.jsx","Countdown.jsx","Birthday.jsx","RouterBirthday.jsx","Generate.jsx","App.js","index.js"],"names":["Wish","name","className","toUpperCase","Countdown","countdownData","isItBday","days","hours","minutes","seconds","Birthday","day","month","useState","state","setState","undefined","currentTime","Date","currentYear","getFullYear","getDate","getMonth","useEffect","setInterval","prevState","dateAtm","birthdayDay","getTime","timeRemaining","Math","floor","countdown","monthBday","to","RouterBirthday","props","params","match","Generate","setName","setDay","setMonth","link","setLink","type","placeholder","value","onChange","e","target","max","min","selected","onClick","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acd1f039.chunk.js","sourcesContent":["import React from 'react';\n\nconst Wish = ({ name }) => {\n  return (\n    <div className='wish-message'>\n      HAPPY BIRTHDAY <span className='highlight'>{name.toUpperCase()}</span> !!!\n    </div>\n  );\n};\n\nexport default Wish;\n","import React from 'react';\nimport Wish from './Wish';\n\nconst Countdown = ({ countdownData, name }) => {\n  if (!countdownData.isItBday) {\n    return (\n      <div>\n        <h1 className='heading'>\n          Countdown to <span className='highlight'>{name}'s</span> Birthday\n        </h1>\n        <div className='countdown-wrapper'>\n          <div className='countdown-box'>\n            {countdownData.days}\n            <span className='legend'>Days</span>\n          </div>\n          <div className='countdown-box'>\n            {countdownData.hours}\n            <span className='legend'>Hours</span>\n          </div>\n          <div className='countdown-box'>\n            {countdownData.minutes}\n            <span className='legend'>Minutes</span>\n          </div>\n          <div className='countdown-box'>\n            {countdownData.seconds}\n            <span className='legend'>Seconds</span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <Wish name={name} />;\n  }\n};\n\nexport default Countdown;\n","import React, { useState, useEffect } from 'react';\nimport Countdown from './Countdown';\nimport { Link } from 'react-router-dom';\n\nconst Birthday = ({ name, day, month }) => {\n  // useState Hooks\n  const [state, setState] = useState({\n    seconds: 0,\n    hours: 0,\n    minutes: 0,\n    days: 0,\n    isItBday: false,\n  });\n\n  if (name === undefined || day === undefined || month === undefined) {\n    // This is if not enough params are provided\n    name = 'Sanusi'; // Name of the Person\n    month = 5; // Month of the Birthday\n    day = 20; // Day of the Birthday\n  }\n\n  // get current time\n  const currentTime = new Date();\n  // get current year\n  const currentYear = currentTime.getFullYear();\n\n  // Getting the Birthday in Data Object\n  // WE subtract 1 from momnth ; Months start from 0 in Date Object\n  // Bithday Boolean\n  const isItBday =\n    currentTime.getDate() === day && currentTime.getMonth() === month - 1;\n\n  useEffect(() => {\n    setInterval(() => {\n      const countdown = () => {\n        // Getting the Current Date\n        const dateAtm = new Date();\n\n        // if the Birthday has passed\n        // then set the Birthday countdown for next year\n        let birthdayDay = new Date(currentYear, month - 1, day);\n        if (dateAtm > birthdayDay) {\n          birthdayDay = new Date(currentYear + 1, month - 1, day);\n        } else if (dateAtm.getFullYear() === birthdayDay.getFullYear() + 1) {\n          birthdayDay = new Date(currentYear, month - 1, day);\n        }\n\n        // Getitng Current Time\n        const currentTime = dateAtm.getTime();\n        // Getting Birthdays Time\n        const birthdayTime = birthdayDay.getTime();\n\n        // Time remaining for the Birthday\n        const timeRemaining = birthdayTime - currentTime;\n\n        let seconds = Math.floor(timeRemaining / 1000);\n        let minutes = Math.floor(seconds / 60);\n        let hours = Math.floor(minutes / 60);\n        let days = Math.floor(hours / 24);\n\n        seconds %= 60;\n        minutes %= 60;\n        hours %= 24;\n\n        // Setting States\n        setState((prevState) => ({\n          ...prevState,\n          seconds,\n          minutes,\n          hours,\n          days,\n          isItBday,\n        }));\n        // console.log(`${days}:${hours}:${minutes}:${seconds} , ${isItBday}`);\n      };\n      if (!isItBday) {\n        countdown();\n      } else {\n        setState((prevState) => ({\n          ...prevState,\n          isItBday: true,\n        }));\n      }\n    }, 1000);\n  }, [currentYear, day, isItBday, month]);\n\n  let birth = new Date(currentYear, month - 1, day);\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  let monthBday = monthNames[birth.getMonth()];\n\n  return (\n    <div className='page'>\n      <Countdown countdownData={state} name={name} />\n      {!isItBday && (\n        <>\n          <div className='birthdate'>\n            Birth-Date: {day} {monthBday} {currentYear}\n          </div>\n          <Link to='/generate'>Generate Friends Birthday Here</Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Birthday;\n","import React from 'react';\nimport Birthday from './Birthday';\n\nconst RouterBirthday = (props) => {\n  const { params } = props.match;\n  const { name, day, month } = params;\n  return (\n    <>\n      <Birthday name={name} month={month} day={day} />\n    </>\n  );\n};\n\nexport default RouterBirthday;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Generate = () => {\n  const [name, setName] = useState('');\n  const [day, setDay] = useState(1);\n  const [month, setMonth] = useState(1);\n  const [link, setLink] = useState('');\n  const generateLink = () => {\n    setLink(\n      `https://birthday-wisher.netlify.app/birthday/${name}/${day}/${month}`\n    );\n  };\n  return (\n    <div className='page'>\n      <h1>Generate Friends Birthday Here</h1>\n      <div className='form'>\n        <input\n          type='text'\n          placeholder='Enter Name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type='number'\n          placeholder='Enter Day'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n          max={31}\n          min={1}\n        />\n        <select value={month} onChange={(e) => setMonth(e.target.value)}>\n          <option value=''>Select Month</option>\n          <option selected value='1'>\n            January\n          </option>\n          <option value='2'>February</option>\n          <option value='3'>March</option>\n          <option value='4'>April</option>\n          <option value='5'>May</option>\n          <option value='6'>June</option>\n          <option value='7'>July</option>\n          <option value='8'>August</option>\n          <option value='9'>September</option>\n          <option value='10'>October</option>\n          <option value='11'>November</option>\n          <option value='12'>December</option>\n        </select>\n      </div>\n      <button className='btn' onClick={() => generateLink()}>\n        Generate Link\n      </button>\n\n      {link !== '' ? (\n        <>\n          <p className='gen-link'>{link}</p>\n          <Link to={`birthday/${name}/${day}/${month}`}>\n            <button className='btn'>Visit Link</button>\n          </Link>\n        </>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport default Generate;\n","import React from 'react';\nimport './App.css';\nimport Birthday from './Birthday';\nimport { Route, Switch } from 'react-router-dom';\nimport RouterBirthday from './RouterBirthday';\nimport Generate from './Generate';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/' component={Birthday} />\n        <Route\n          exact path='/birthday/:name?/:day?/:month?'\n          component={RouterBirthday}\n        />\n        <Route exact path='/generate' component={Generate} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}